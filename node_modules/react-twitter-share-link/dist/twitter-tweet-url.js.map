{"version":3,"sources":["../src/twitter-tweet-url.js"],"names":["defaultTwitterUrlOptions","link","document","location","href","text","hashtags","via","related","customQueryParams","defaultTwitterBaseUrl","TwitterTweetUrl","options","baseUrl","_","isObject","isArray","Error","Object","assign","isNil","isString","params","url","arrayToCommaSeparatedList","stringToCommaSeparatedList","other","queryString","stringify","parse","keys","length","trim","strOrArr","str","filter","item","isNumber","map","toString","join","split"],"mappings":"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","file":"twitter-tweet-url.js","sourcesContent":["import _ from 'lodash';\nimport queryString from 'query-string';\n\nexport const defaultTwitterUrlOptions = {\n\tlink: typeof document !== 'undefined' ? document.location.href : null,\n\ttext: null,\n\thashtags: null,\n\tvia: null,\n\trelated: null,\n\tcustomQueryParams: null\n};\nexport const defaultTwitterBaseUrl = 'https://twitter.com/intent/tweet';\n\nexport class TwitterTweetUrl {\n\n\tconstructor(options = {}, baseUrl = defaultTwitterBaseUrl) {\n\t\tif (!_.isObject(options) || _.isArray(options)) {\n\t\t\tthrow new Error('Provided options can only be of type object');\n\t\t}\n\n\t\tthis.options = Object.assign({}, defaultTwitterUrlOptions, options);\n\n\t\t// Sometimes the defaultTwitterUrlOptions will be defined before the browser is ready which evaluates the link to\n\t\t// null, and if the link is null the toUrl() call won't work. So this is to make sure the options.link is defined.\n\t\tif (_.isNil(this.options.link) && typeof document !== 'undefined') {\n\t\t\tthis.options.link = document.location.href;\n\t\t}\n\n\t\tif (!_.isString(baseUrl)) {\n\t\t\tthrow new Error('Provided baseUrl can only be of type string');\n\t\t}\n\n\t\t// Changed the base url to 'https://twitter.com/intent/tweet' instead of 'https://twitter.com/share'\n\t\t// Because /share adds the 'original_referer' param and forwards it to 'https://twitter.com/intent/tweet'\n\t\tthis.baseUrl = baseUrl;\n\t}\n\n\t/**\n\t * Converts an array into a comma separated list.\n\t *\n\t * format: input => output\n\t * e.g ['test', 'test ', ''] => 'test,test'\n\t * or ['test'] => 'test'\n\t *\n\t * @param strOrArr\n\t * @returns {string}\n\t */\n\tstatic arrayToCommaSeparatedList(strOrArr = []) {\n\t\tif (!(_.isArray(strOrArr) || _.isString(strOrArr))) {\n\t\t\tthrow new Error('Can only provide string or array');\n\t\t}\n\n\t\tif (_.isString(strOrArr)) {\n\t\t\tstrOrArr = [strOrArr];\n\t\t}\n\n\t\tconst str = strOrArr\n\t\t\t.filter((item) => _.isString(item) || _.isNumber(item))\n\t\t\t.map((item) => item.toString().trim())\n\t\t\t.filter((item) => item !== '')\n\t\t\t.join(',');\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Converts a string into a comma separated list\n\t *\n\t * format: input => output\n\t * e.g 'test, test,' => 'test,test'\n\t * or 'test, test' => 'test,test'\n\t * or 'test test' => 'test,test'\n\t * or 'test' => 'test'\n\t *\n\t * @param str\n\t * @returns {string}\n\t */\n\tstatic stringToCommaSeparatedList(str = '') {\n\t\tif (!_.isString(str)) {\n\t\t\tthrow new Error('Can only provide string');\n\t\t}\n\n\t\tstr = str\n\t\t\t.trim()\n\t\t\t.split(',')\n\t\t\t.join(' ')\n\t\t\t.split(' ')\n\t\t\t.filter((item) => item.trim() !== '')\n\t\t\t.map((item) => item.trim())\n\t\t\t.join(',');\n\n\t\treturn str;\n\t}\n\n\t/**\n\t * Converts the options into a url based on the button parameter reference:\n\t * https://developer.twitter.com/en/docs/twitter-for-websites/tweet-button/guides/parameter-reference1\n\t *\n\t * @returns {string}\n\t */\n\ttoUrl() {\n\n\t\t// Check if options.link is a string\n\t\tif (!_.isString(this.options.link)) {\n\t\t\tthrow new Error('options.link can only be in string format');\n\t\t}\n\n\t\tlet params = {\n\t\t\turl: this.options.link\n\t\t};\n\n\t\t// Set the baseUrl with the link url.\n\t\tlet url = this.baseUrl;\n\n\t\t// Check if there is text and then adds that text as a param to the url.\n\t\tif (!_.isNil(this.options.text)) {\n\t\t\t// Check if options.text is a string.\n\t\t\tif (!_.isString(this.options.text)) {\n\t\t\t\tthrow new Error('options.text can only be in string format');\n\t\t\t}\n\n\t\t\tparams.text = this.options.text;\n\t\t}\n\n\t\t// Checks if hashtags are provided.\n\t\tif (!_.isNil(this.options.hashtags)) {\n\t\t\t// Check if options.hashtags has the correct type.\n\t\t\tif (!(_.isArray(this.options.hashtags) || _.isString(this.options.hashtags))) {\n\t\t\t\tthrow new Error('options.hashtags can only be in array or string format');\n\t\t\t}\n\n\t\t\tlet hashtags = null;\n\t\t\tif (_.isArray(this.options.hashtags)) {\n\t\t\t\thashtags = TwitterTweetUrl.arrayToCommaSeparatedList(this.options.hashtags);\n\t\t\t} else if (_.isString(this.options.hashtags)) {\n\t\t\t\thashtags = TwitterTweetUrl.stringToCommaSeparatedList(this.options.hashtags);\n\t\t\t}\n\n\t\t\tif (hashtags !== null) {\n\t\t\t\tparams.hashtags = hashtags;\n\t\t\t}\n\n\t\t}\n\n\t\t// Check if options.via is provided.\n\t\tif (!_.isNil(this.options.via)) {\n\t\t\t// Check if via is of the correct type.\n\t\t\tif (!_.isString(this.options.via)) {\n\t\t\t\tthrow new Error('options.via can only be in string format');\n\t\t\t}\n\n\t\t\tparams.via = this.options.via;\n\t\t}\n\n\t\t// Check if options.related is provided.\n\t\tif (!_.isNil(this.options.related)) {\n\t\t\t// Check if options.related is a array or string.\n\t\t\tif (!(_.isArray(this.options.related) || _.isString(this.options.related))) {\n\t\t\t\tthrow new Error('options.related can only be in array or string format');\n\t\t\t}\n\n\t\t\tlet related = null;\n\t\t\tif (_.isArray(this.options.related)) {\n\t\t\t\trelated = TwitterTweetUrl.arrayToCommaSeparatedList(this.options.related);\n\t\t\t} else if (_.isString(this.options.related)) {\n\t\t\t\trelated = TwitterTweetUrl.stringToCommaSeparatedList(this.options.related);\n\t\t\t}\n\n\t\t\tif (related !== null) {\n\t\t\t\tparams.related = related;\n\t\t\t}\n\t\t}\n\n\t\tlet other = '';\n\t\t// Check if other is provided.\n\t\tif (!_.isNil(this.options.customQueryParams)) {\n\t\t\t// Check if the options.customQueryParams is a object or a string\n\t\t\tif (\n\t\t\t\t!(_.isObject(this.options.customQueryParams) || _.isString(this.options.customQueryParams)) ||\n\t\t\t\t_.isArray(this.options.customQueryParams)\n\t\t\t) {\n\t\t\t\tthrow new Error('options.customQueryParams can only be in object or string format');\n\t\t\t}\n\n\t\t\tif (_.isObject(this.options.customQueryParams)) {\n\t\t\t\tother = queryString.stringify(this.options.customQueryParams);\n\t\t\t} else if (_.isString(this.options.customQueryParams)) {\n\t\t\t\tother = queryString.stringify(queryString.parse(this.options.customQueryParams));\n\t\t\t}\n\t\t}\n\n\t\tif (Object.keys(params).length > 0) {\n\t\t\turl += `?${queryString.stringify(params)}`;\n\n\t\t\tif (other.trim() !== '') {\n\t\t\t\turl += `&${other}`;\n\t\t\t}\n\t\t} else if (other.trim() !== '') {\n\t\t\turl += `?${other}`;\n\t\t}\n\n\t\treturn url;\n\t}\n}\n"]}